#!/usr/bin/perl

=head1 NAME

apt-history - Output recently installed (or otherwise manipulated) Debian
packages in format usable by 'apt-get remove'.

=cut

=head1 SYNOPSIS

apt-history [options]

Options:

    --help      Show the help information.
    --man       Show the full documentation.

=cut

=head1 DESCRIPTION

Sometimes you want to see or remove the packages you previously installed.

=cut

=head1 LICENSE

This is free software; you can redistribute it and/or modify it under the same
terms as Perl itself.

=cut

use strict;
use warnings;
use Getopt::Long qw(GetOptions);
use Pod::Usage qw(pod2usage);

my %opts;
GetOptions( "help|h|?" => \$opts{help}, "man" => \$opts{man} )
  or pod2usage(2);

pod2usage(1) if $opts{help};
pod2usage( -exitval => 0, -verbose => 2, -noperldoc => 1 ) if $opts{man};

#
# apt
#

print "=== apt ===\n";

@ARGV = qw(/var/log/apt/history.log);

my ( $in_block, $date );
while (<>) {
    if (/^Start-Date:\s*(\S.*)$/) {
        $date     = $1;
        $in_block = 1;
        next;
    } elsif (/^End-Date:/) {
        $in_block = 0;
        next;
    }
    if ($in_block) {
        next if /^Commandline:/;
        if (/^([^:]+):(.*)$/) {
            my $operation = $1;
            my @pkgs = split /,/, $2;
            print "---> $operation on $date\n";
            for ( sort @pkgs ) {
                print "$1 " if /\s*([^:]+):/;
            }
            print "\n";
        }
    }
}

#
# dpkg
#

print "=== dpkg ===\n";

@ARGV = qw(/var/log/dpkg.log);

my %pkgs;
my @actions = qw(install);
while (<>) {
    my ( $date, $time, $action, $pkg ) = (split)[ 0 .. 4 ];
    next unless grep $action eq $_, @actions;
    push @{ $pkgs{$action}{$date}{packages} }, $pkg;
    push @{ $pkgs{$action}{$date}{times} },    $time;
}

for my $action ( keys %pkgs ) {
    for my $date ( sort keys %{ $pkgs{$action} } ) {
        my ( $start, $end ) = @{ $pkgs{$action}{$date}{times} }[ 0, -1 ];
        print "---> $action on $date ($start - $end)\n";
        for my $pkg ( sort @{ $pkgs{$action}{$date}{packages} } ) {
            print "$1 " if $pkg =~ /\s*([^:]+):/;
        }
        print "\n";
    }
}
