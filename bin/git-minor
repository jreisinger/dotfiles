#!/usr/bin/env perl
#
# Script that adds and commits modifications in git tracked files with a nice
# message. It gets called from an alias within ~/.gitconfig.
#
use strict;
use warnings;
use Term::ANSIColor;

my $cmd = shift;
usage_and_exit() if not $cmd;
if ($cmd eq "minor") {
    minor()
} elsif ($cmd eq "sync") {
    sync()
} else {
    print "Uknown command: $cmd\n";
    exit 1;
}

sub usage_and_exit {
    print "Usage: $0 command\n";
    exit 1;
}

sub sync {

}

sub check_we_are_in_git_repo {
    if system("git status > /dev/null 2>&1") {
        print color('bold red'), ">>" color('reset'), "Not in a git repo";
    }
}

check_we_are_in_git_repo() {
    if ! git status > /dev/null 2>&1; then
        echo -e "${BLDRED}>>${TXTRST} Not a git repository, exiting ..."
        exit 1
    fi
}

sub minor {
    my @files;

    for (`git status --porcelain`) {
        my $status   = (split)[0];
        my $filename = (split)[1];
        next if $status ne 'M';    # only modified files (man git-status)
        push @files, $filename;
    }

    if (@files) {
        my $cmd = "git commit -am 'minor changes in " . join( ", ", @files ) . "'";
        print color('bold green');
        print ">> ";
        print color('reset');
        print "$cmd\n";
        exec $cmd;
    }
}