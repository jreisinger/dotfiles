#!/usr/bin/env perl
# Count katas I've done.
use 5.014;      # implies "use strict;"
use warnings;
use autodie;

use HTTP::Tiny;

my $url = 'https://reisinge.net/notes/prog/kata';
my $response = HTTP::Tiny->new->get($url);
die "Failed getting $url!\n" unless $response->{success};

my %counts;

my $done;       # (-:
my $skipped;    # )-:

my $dateRE = qr'\d{4}-\d{2}-\d{2}';
my $kataRE = qr'([^<]+)<';

foreach (split(/\n/, $response->{content})) {
    if (/$dateRE:\s*$kataRE/) {
        my $katas = $1;
        for my $kata (split(/\s*,\s*/, $katas)) {
            if ($kata eq ")-:") {
                $skipped++;
                next;
            }
            $counts{$kata}++;
            $done++;
        }
    }
}

my $format = "%-15s %2d %s\n";

for my $kata (sort keys %counts) {
    printf($format, $kata, $counts{$kata}, graph($counts{$kata}));
}

print("-" x 79, "\n");
printf($format, ")-:", $skipped, graph($skipped));
printf($format, "(-:", $done, graph($done));

sub graph {
    my $n = shift;

    my $hundreds = $n / 100;
    my $tens = $n / 10;
    my $ones = $n % 10;

    return "I" x $hundreds . "i" x $tens . '.' x $ones;
}