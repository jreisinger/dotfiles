#!/usr/bin/perl -s
use strict;
use warnings;
use vars qw($h $w $s);       # command line switches
use LWP::Protocol::https;    # for SSL (https) support
use LWP::Simple;
use CGI;

usage() if $h;

my $url = 'https://raw.githubusercontent.com/jreisinger/blog/master/posts/quotes.txt';
my $quote = get_quote($url);
print_quote($quote);

#######################################
sub print_quote {
#######################################
    my $quote = shift;

    local $| = 1;
    binmode STDOUT, ':utf8';

    if ($w) {       # print in HTML format
        $quote = parens_to_link($quote);

        my $q = CGI->new;
        #<<<
        print 
          $q->start_html(-title => "Quote of the Minute", -encoding => "utf-8"),
          $q->p($quote),
          $q->end_html;
        #>>>
    } elsif ($s) {  # print slowly
         slowprint( $quote . "\n" );
    } else {        # print normally
         print( $quote . "\n" );
    }
}

#######################################
sub parens_to_link {
#######################################
    my $quote = shift;

    # -- TimToady (http://irclog.perlgeek.de/perl6/2013-07-21)
    # ===>
    # -- <a href="http://irclog.perlgeek.de/perl6/2013-07-21">TimToady</a>
    $quote =~
      s#--\s{0,3}([^(]+?)\s+\((http:\/\/[^)]+)\)#-- <a href="$2">$1</a>#;

    return $quote;
}

#######################################
sub get_quote {
#######################################
    my $url = shift;

    my $doc = get $url;
    unless ($doc) {    # get() failed ...
        getprint $url; # ... so print status code and message on STDERR.
        die "Exiting ...\n";
    }

    my @quotes = split /\n+/, $doc;
    my $quote = $quotes[ rand @quotes ];

    return $quote;
}


#######################################
sub slowprint {
#######################################
    my $text = shift;

    for my $char ( split //, $text ) {
        print $char;
        select( undef, undef, undef, 0.005 * $s );
    }
}

#######################################
sub usage {
#######################################
    my $code = (shift) // 0;

    my $msg = <<"EOF";
$0 [-h] [-w|-s]
Print a random quote from my collection of quotes
-w          in HTML format
-s[=DELAY]  print characters slowly; ignored when -w is used

Usage from cron:
PERL5LIB=\$HOME/perl5/MyUtils/lib:\$HOME/perl5/lib/perl5
* * * * *   \$HOME/bin/myquote > \$HOME/public_html/quote.html
EOF

    print $msg;

    exit $code;
}
