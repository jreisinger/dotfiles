#!/usr/bin/perl -s
use strict;
use vars qw($h $v $d);    # command line switches
use warnings;

usage() if $h;
my $file = shift or usage(1);

my $days = $d // 7;       # defaults to 7

my $SECONDS_PER_DAY = 24 * 60 * 60;
my ( $atime, $mtime ) = ( stat($file) )[ 8, 9 ];
my $new_atime = $atime - $days * $SECONDS_PER_DAY;
my $new_mtime = $mtime - $days * $SECONDS_PER_DAY;

utime( $new_atime, $new_mtime, $file )
  or die "could not backdate $file by week: $!";
if ($v) {
    ( my $msg = << "EOF") =~ s/^\s+//gm;
    atime: $atime --> $new_atime
    mtime: $mtime --> $new_mtime
EOF
    print $msg;
}

#######################################
sub usage {
#######################################
    my $code = (shift) // 0;

    ( my $msg = << "EOF") =~ s/^\s+//gm;
    $0: [-h] [-v] [-d=<days>] <file>
    Backdate <file>'s access time and modification time by <days> (default is 7).
EOF
    print $msg;

    exit $code;
}

