#!/usr/bin/env perl
# List PerlMonk Saints that have been recently active.
use 5.014;      # implies "use strict;"
use warnings;
use autodie;

use HTTP::Tiny;

my $url = 'https://perlmonks.org/?node=Saints%20in%20our%20Book';
my $response = HTTP::Tiny->new->get($url);
die "Failed getting $url\n" unless $response->{success};

my %seconds;
my %minutes;
my %hours;

# <a href="?node_id=979">vroom</a> ...
my $userRE = qr'<a href="\?node_id=\d+">(?<user>[^<]+)<\/a>';
# ... <td align="right">2 years ago</td>
my $timeRE = qr'<td align="right">(?<count>\d+) (?<unit>\w+) ago<\/td>';

foreach (split(/\n/, $response->{content})) {
    if ( /$userRE.*$timeRE/ ) {
        my ($user, $count, $unit) = ($+{user}, $+{count}, $+{unit});

        if ($unit =~ /^seconds?$/) {
            $seconds{$user} = $count;
        } elsif ($unit =~ /^minutes?$/) {
            $minutes{$user} = $count;
        } elsif ($unit =~ /^hours?$/) {
            $hours{$user} = $count;
        }
    }
}

my $format = "%-20s %02d %s ago\n";

for my $user (sort {$hours{$b} <=> $hours{$a}} keys %hours) {
    printf $format, $user, $hours{$user}, "hours";
}

for my $user (sort {$minutes{$b} <=> $minutes{$a}} keys %minutes) {
    printf $format, $user, $minutes{$user}, "minutes";
}

for my $user (sort {$seconds{$b} <=> $seconds{$a}} keys %seconds) {
    printf $format, $user, $seconds{$user}, "seconds";
}
