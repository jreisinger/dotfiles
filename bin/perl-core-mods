#!/usr/bin/perl
use strict;
use warnings;
use 5.010;
use Module::CoreList;
use Getopt::Long;
use Pod::Usage;

#################
# Configuration #
#################

# Command line options
my $help = 0;
my $man  = 0;
my $name;
GetOptions(
    "help|h|?" => \$help,
    man        => \$man,
    name       => \$name,
) or pod2usage(2);

# Help
pod2usage(1) if $help;
pod2usage( -exitval => 0, -verbose => 2, -noperldoc => 1 ) if $man;

########
# Main #
########

my $perl_ver = (shift) // $];

my @modules = sort keys $Module::CoreList::version{$perl_ver};

my $max_length = 0;
my %rel_date;
for my $m (@modules) {
    $max_length = length $m if length $m > $max_length;
    $rel_date{$m} =
      $Module::CoreList::released{ Module::CoreList->first_release($m) };
}

if ($name) {
    for my $m ( sort keys %rel_date ) {
        printf "%*s %s\n", -$max_length, $m, $rel_date{$m};
    }
} else {
    for my $m ( sort { $rel_date{$a} cmp $rel_date{$b} } keys %rel_date ) {
        printf "%*s %s\n", -$max_length, $m, $rel_date{$m};
    }
}

__END__

=head1 NAME

perl-core-mods - list first release date of core Perl modules

=head1 SYNOPSIS

perl-core-mods [options] [<perl_version>]

  Options:
    --help      brief help message
    --man       full documentation
    --name      sor by module name (default is by release date)

=head1 DESCRIPTION

List first release date of core Perl modules for <perl_version>. If you ommit
the <perl_version> the current Perl version (as stored in C<$[>) is taken.

Based on exercise 2.1 from Intermediate Perl.

=head1 EXAMPLES

Print first release dates for Perl v5.14.2 core modules:

    perl-core-mods 5.014002

=cut
